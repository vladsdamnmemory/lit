export class ViewportWatcher{constructor(e,t,s=0,i=!1){let o,r,n,c,l,h,a;this.nodes=Array.prototype.slice.call(e),this.menuItems=Array.prototype.slice.call(t),this.topOffset=s,this.enableClickListeners=i,this.enableClickListeners&&(this.scrollIntoView=e=>{let t;if(t=e.currentTarget||e.target,t){let e,s,i;e=this.menuItems.indexOf(t),s=this.nodes[e],i=s.getBoundingClientRect().top+window.pageYOffset-this.topOffset,window.scrollTo({top:i,behavior:"smooth"})}else console.error("Could not find a target of clicked element")},this.menuItems.forEach(e=>{e.addEventListener("click",this.scrollIntoView,!1)})),this.setActive=()=>{let e;for(c=!1,l=Math.ceil(window.pageYOffset+this.topOffset),r=0,o=this.nodes.length,n=--o;n>=0;n--)a=this.nodes[n].getBoundingClientRect(),h=Math.floor(a.top+window.pageYOffset),e=this.menuItems[n],l>=h&&!c||0===n&&l<h?(ViewportWatcher.classList("add",e),c=!0):ViewportWatcher.classList("remove",e)},window.addEventListener("scroll",this.setActive,!1),window.addEventListener("resize",this.setActive,!1),this.setActive()}static classList(e,t){t.classList[e]("vw-active")}refresh(){this.setActive()}reconstruct(e,t,s=0,i=!1){return this.destroy(),new ViewportWatcher(e,t,s,i)}destroy(){window.removeEventListener("scroll",this.setActive,!1),window.removeEventListener("resize",this.setActive,!1),this.menuItems.forEach(e=>{e.removeEventListener("click",this.scrollIntoView,!1),ViewportWatcher.classList("remove",e)})}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxpYi9WaWV3cG9ydFdhdGNoZXIuanMiXSwibmFtZXMiOlsiVmlld3BvcnRXYXRjaGVyIiwiW29iamVjdCBPYmplY3RdIiwibm9kZXMiLCJtZW51SXRlbXMiLCJ0b3BPZmZzZXQiLCJlbmFibGVDbGlja0xpc3RlbmVycyIsImFyckxlbmd0aCIsInplcm8iLCJpIiwiY2xhc3NBZGRlZCIsImNsaWVudE9mZnNldCIsImVsT2Zmc2V0VG9wIiwiYm94IiwidGhpcyIsIkFycmF5IiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwic2Nyb2xsSW50b1ZpZXciLCJldiIsInRhcmdldCIsImN1cnJlbnRUYXJnZXQiLCJpbmRleCIsImVsZW1lbnQiLCJvZmZzZXQiLCJpbmRleE9mIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwid2luZG93IiwicGFnZVlPZmZzZXQiLCJzY3JvbGxUbyIsImJlaGF2aW9yIiwiY29uc29sZSIsImVycm9yIiwiZm9yRWFjaCIsIml0ZW0iLCJhZGRFdmVudExpc3RlbmVyIiwic2V0QWN0aXZlIiwiTWF0aCIsImNlaWwiLCJsZW5ndGgiLCJmbG9vciIsImNsYXNzTGlzdCIsImNvbW1hbmQiLCJkZXN0cm95IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ik9BQU8sTUFBTUEsZ0JBQ1RDLFlBQVlDLEVBQU9DLEVBQVdDLEVBQVksRUFBR0MsR0FBdUIsR0FDaEUsSUFBSUMsRUFBV0MsRUFBTUMsRUFBR0MsRUFBWUMsRUFBY0MsRUFBYUMsRUFDL0RDLEtBQUtYLE1BQVFZLE1BQU1DLFVBQVVDLE1BQU1DLEtBQUtmLEdBQ3hDVyxLQUFLVixVQUFZVyxNQUFNQyxVQUFVQyxNQUFNQyxLQUFLZCxHQUM1Q1UsS0FBS1QsVUFBWUEsRUFDakJTLEtBQUtSLHFCQUF1QkEsRUFDeEJRLEtBQUtSLHVCQUNMUSxLQUFLSyxlQUFrQkMsSUFDbkIsSUFBSUMsRUFFSixHQURBQSxFQUFTRCxFQUFHRSxlQUFpQkYsRUFBR0MsT0FDNUJBLEVBQVEsQ0FDUixJQUFJRSxFQUFPQyxFQUFTQyxFQUNwQkYsRUFBUVQsS0FBS1YsVUFBVXNCLFFBQVFMLEdBQy9CRyxFQUFVVixLQUFLWCxNQUFNb0IsR0FDckJFLEVBQVNELEVBQVFHLHdCQUF3QkMsSUFBTUMsT0FBT0MsWUFBY2hCLEtBQUtULFVBQ3pFd0IsT0FBT0UsU0FBUyxDQUFFSCxJQUFLSCxFQUFRTyxTQUFVLGdCQUd6Q0MsUUFBUUMsTUFBTSwrQ0FHdEJwQixLQUFLVixVQUFVK0IsUUFBU0MsSUFDcEJBLEVBQUtDLGlCQUFpQixRQUFTdkIsS0FBS0ssZ0JBQWdCLE1BRzVETCxLQUFLd0IsVUFBWSxLQUNiLElBQUlkLEVBTUosSUFMQWQsR0FBYSxFQUNiQyxFQUFlNEIsS0FBS0MsS0FBS1gsT0FBT0MsWUFBY2hCLEtBQUtULFdBQ25ERyxFQUFPLEVBQ1BELEVBQVlPLEtBQUtYLE1BQU1zQyxPQUN2QmhDLElBQU1GLEVBQ0VFLEdBSEQsRUFHWUEsSUFDZkksRUFBTUMsS0FBS1gsTUFBTU0sR0FBR2tCLHdCQUNwQmYsRUFBYzJCLEtBQUtHLE1BQU03QixFQUFJZSxJQUFNQyxPQUFPQyxhQUMxQ04sRUFBVVYsS0FBS1YsVUFBVUssR0FDckJFLEdBQWdCQyxJQUFnQkYsR0FBb0IsSUFBTkQsR0FBV0UsRUFBZUMsR0FDeEVYLGdCQUFnQjBDLFVBQVUsTUFBT25CLEdBQ2pDZCxHQUFhLEdBR2JULGdCQUFnQjBDLFVBQVUsU0FBVW5CLElBSWhESyxPQUFPUSxpQkFBaUIsU0FBVXZCLEtBQUt3QixXQUFXLEdBQ2xEVCxPQUFPUSxpQkFBaUIsU0FBVXZCLEtBQUt3QixXQUFXLEdBQ2xEeEIsS0FBS3dCLFlBRVRwQyxpQkFBaUIwQyxFQUFTUixHQUN0QkEsRUFBZ0IsVUFBRVEsR0FBUyxhQUUvQjFDLFVBQ0lZLEtBQUt3QixZQUVUcEMsWUFBWUMsRUFBT0MsRUFBV0MsRUFBWSxFQUFHQyxHQUF1QixHQUVoRSxPQURBUSxLQUFLK0IsVUFDRSxJQUFJNUMsZ0JBQWdCRSxFQUFPQyxFQUFXQyxFQUFXQyxHQUU1REosVUFDSTJCLE9BQU9pQixvQkFBb0IsU0FBVWhDLEtBQUt3QixXQUFXLEdBQ3JEVCxPQUFPaUIsb0JBQW9CLFNBQVVoQyxLQUFLd0IsV0FBVyxHQUNyRHhCLEtBQUtWLFVBQVUrQixRQUFTQyxJQUNwQkEsRUFBS1Usb0JBQW9CLFFBQVNoQyxLQUFLSyxnQkFBZ0IsR0FDdkRsQixnQkFBZ0IwQyxVQUFVLFNBQVVQIiwiZmlsZSI6ImxpYi9WaWV3cG9ydFdhdGNoZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgVmlld3BvcnRXYXRjaGVyIHtcbiAgICBjb25zdHJ1Y3Rvcihub2RlcywgbWVudUl0ZW1zLCB0b3BPZmZzZXQgPSAwLCBlbmFibGVDbGlja0xpc3RlbmVycyA9IGZhbHNlKSB7XG4gICAgICAgIGxldCBhcnJMZW5ndGgsIHplcm8sIGksIGNsYXNzQWRkZWQsIGNsaWVudE9mZnNldCwgZWxPZmZzZXRUb3AsIGJveDtcbiAgICAgICAgdGhpcy5ub2RlcyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKG5vZGVzKTtcbiAgICAgICAgdGhpcy5tZW51SXRlbXMgPSBBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChtZW51SXRlbXMpO1xuICAgICAgICB0aGlzLnRvcE9mZnNldCA9IHRvcE9mZnNldDtcbiAgICAgICAgdGhpcy5lbmFibGVDbGlja0xpc3RlbmVycyA9IGVuYWJsZUNsaWNrTGlzdGVuZXJzO1xuICAgICAgICBpZiAodGhpcy5lbmFibGVDbGlja0xpc3RlbmVycykge1xuICAgICAgICAgICAgdGhpcy5zY3JvbGxJbnRvVmlldyA9IChldikgPT4ge1xuICAgICAgICAgICAgICAgIGxldCB0YXJnZXQ7XG4gICAgICAgICAgICAgICAgdGFyZ2V0ID0gZXYuY3VycmVudFRhcmdldCB8fCBldi50YXJnZXQ7XG4gICAgICAgICAgICAgICAgaWYgKHRhcmdldCkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgaW5kZXgsIGVsZW1lbnQsIG9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgaW5kZXggPSB0aGlzLm1lbnVJdGVtcy5pbmRleE9mKHRhcmdldCk7XG4gICAgICAgICAgICAgICAgICAgIGVsZW1lbnQgPSB0aGlzLm5vZGVzW2luZGV4XTtcbiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0ID0gZWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgKyB3aW5kb3cucGFnZVlPZmZzZXQgLSB0aGlzLnRvcE9mZnNldDtcbiAgICAgICAgICAgICAgICAgICAgd2luZG93LnNjcm9sbFRvKHsgdG9wOiBvZmZzZXQsIGJlaGF2aW9yOiAnc21vb3RoJyB9KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJDb3VsZCBub3QgZmluZCBhIHRhcmdldCBvZiBjbGlja2VkIGVsZW1lbnRcIik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHRoaXMubWVudUl0ZW1zLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBpdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnNjcm9sbEludG9WaWV3LCBmYWxzZSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldEFjdGl2ZSA9ICgpID0+IHtcbiAgICAgICAgICAgIGxldCBlbGVtZW50O1xuICAgICAgICAgICAgY2xhc3NBZGRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgY2xpZW50T2Zmc2V0ID0gTWF0aC5jZWlsKHdpbmRvdy5wYWdlWU9mZnNldCArIHRoaXMudG9wT2Zmc2V0KTtcbiAgICAgICAgICAgIHplcm8gPSAwO1xuICAgICAgICAgICAgYXJyTGVuZ3RoID0gdGhpcy5ub2Rlcy5sZW5ndGg7XG4gICAgICAgICAgICBpID0gLS1hcnJMZW5ndGg7XG4gICAgICAgICAgICBmb3IgKGk7IGkgPj0gemVybzsgaS0tKSB7XG4gICAgICAgICAgICAgICAgYm94ID0gdGhpcy5ub2Rlc1tpXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgICAgICAgICBlbE9mZnNldFRvcCA9IE1hdGguZmxvb3IoYm94LnRvcCArIHdpbmRvdy5wYWdlWU9mZnNldCk7XG4gICAgICAgICAgICAgICAgZWxlbWVudCA9IHRoaXMubWVudUl0ZW1zW2ldO1xuICAgICAgICAgICAgICAgIGlmIChjbGllbnRPZmZzZXQgPj0gZWxPZmZzZXRUb3AgJiYgIWNsYXNzQWRkZWQgfHwgaSA9PT0gMCAmJiBjbGllbnRPZmZzZXQgPCBlbE9mZnNldFRvcCkge1xuICAgICAgICAgICAgICAgICAgICBWaWV3cG9ydFdhdGNoZXIuY2xhc3NMaXN0KFwiYWRkXCIsIGVsZW1lbnQpO1xuICAgICAgICAgICAgICAgICAgICBjbGFzc0FkZGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIFZpZXdwb3J0V2F0Y2hlci5jbGFzc0xpc3QoXCJyZW1vdmVcIiwgZWxlbWVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignc2Nyb2xsJywgdGhpcy5zZXRBY3RpdmUsIGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIHRoaXMuc2V0QWN0aXZlLCBmYWxzZSk7XG4gICAgICAgIHRoaXMuc2V0QWN0aXZlKCk7XG4gICAgfVxuICAgIHN0YXRpYyBjbGFzc0xpc3QoY29tbWFuZCwgaXRlbSkge1xuICAgICAgICBpdGVtW1wiY2xhc3NMaXN0XCJdW2NvbW1hbmRdKFwidnctYWN0aXZlXCIpO1xuICAgIH1cbiAgICByZWZyZXNoKCkge1xuICAgICAgICB0aGlzLnNldEFjdGl2ZSgpO1xuICAgIH1cbiAgICByZWNvbnN0cnVjdChub2RlcywgbWVudUl0ZW1zLCB0b3BPZmZzZXQgPSAwLCBlbmFibGVDbGlja0xpc3RlbmVycyA9IGZhbHNlKSB7XG4gICAgICAgIHRoaXMuZGVzdHJveSgpO1xuICAgICAgICByZXR1cm4gbmV3IFZpZXdwb3J0V2F0Y2hlcihub2RlcywgbWVudUl0ZW1zLCB0b3BPZmZzZXQsIGVuYWJsZUNsaWNrTGlzdGVuZXJzKTtcbiAgICB9XG4gICAgZGVzdHJveSgpIHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHRoaXMuc2V0QWN0aXZlLCBmYWxzZSk7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldEFjdGl2ZSwgZmFsc2UpO1xuICAgICAgICB0aGlzLm1lbnVJdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XG4gICAgICAgICAgICBpdGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnNjcm9sbEludG9WaWV3LCBmYWxzZSk7XG4gICAgICAgICAgICBWaWV3cG9ydFdhdGNoZXIuY2xhc3NMaXN0KFwicmVtb3ZlXCIsIGl0ZW0pO1xuICAgICAgICB9KTtcbiAgICB9XG59XG4iXX0=
